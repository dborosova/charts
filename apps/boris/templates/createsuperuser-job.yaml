{{- define "boris.createsuperuserCommand" -}}
python -c "import django; django.setup(); \
from django.contrib.auth.management.commands.createsuperuser import get_user_model; \
get_user_model().objects.create_superuser(username='{{ required ".Values.borisSuperUserUsername is required!" .Values.borisSuperUserUsername }}', email='{{ required ".Values.borisSuperUserEmail is required!" .Values.borisSuperUserEmail }}', password='{{ required ".Values.borisSuperUserPassword is required!" .Values.borisSuperUserPassword }}')"
{{- end -}}
{{- if .Values.borisCreateSuperUser -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "boris.createsuperuserjobname" . }}
  labels:
    app: {{ include "boris.name" . }}
    jobname: createsuperuser
    # The "app.kubernetes.io/managed-by" label is used to track which tool deployed a given chart.
    # It is useful for admins who want to see what releases a particular tool
    # is responsible for.
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    # The "app.kubernetes.io/instance" convention makes it easy to tie a release to all of the
    # Kubernetes resources that were created as part of that release.
    app.kubernetes.io/instance: {{ .Release.Name }}
    # This makes it easy to audit chart usage.
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      imagePullSecrets:
        - name: {{ .Values.image.pullSecretName }}
      containers:
        - name: post-install-job
          image: "{{ required ".Values.image.repository is required!" .Values.image.repository }}:{{ required ".Values.image.tag is required!" .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # Sleep for few seconds so that MySQL intializes
          command: ['sh', '-c', {{ include "boris.createsuperuserCommand" . | quote }}]
          envFrom:
            - configMapRef:
                name: {{ template "boris.configmapname" . }}
          env:
            - name: BORIS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "mysql.fullname" . }}
                  key: mysql-password
            - name: BORIS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "boris.fullname" . }}
                  key: boris-secret-key
      restartPolicy: Never
  backoffLimit: 5
{{- end -}}
